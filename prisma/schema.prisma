// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name         String
  email        String        @unique
  passwordHash String        @map("password_hash")
  createdAt    DateTime      @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime      @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  Participants Participant[]
  Exchanges    Exchange[]

  @@map("users")
}

model Exchange {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title        String
  isArchived   Boolean       @map("is_archived")
  ownerId      String        @map("owner_id") @db.Uuid
  Owner        User          @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Participants Participant[]

  @@map("exchanges")
}

model Participant {
  id         String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  address1   String
  address2   String
  city       String
  state      String
  zip        String
  country    String
  dogType    String @map("dog_type")
  userId     String @map("user_id") @db.Uuid
  exchangeId String @map("exchange_id") @db.Uuid
  referrerId String @map("referrer_id") @db.Uuid

  User      User          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Exchange  Exchange      @relation(fields: [exchangeId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Referrer  Participant   @relation(name: "Referrer", fields: [referrerId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Referrals Participant[] @relation("Referrer")

  @@unique([exchangeId, userId])
}
